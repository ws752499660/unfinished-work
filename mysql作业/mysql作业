1、创建数据库 practice
	create database practice
		CHARACTER SET 'utf8'
		COLLATE 'utf8_general_ci';

2、在数据库practice上创建四个表学生表（学号、姓名、生日、性别）；课程表（课程号、课程名、教师号）；教师表（教师号、教师名）；选课表（学号、课程号、成绩）；

	create table student
    (
      stu_id int(11),
      name varchar(25),
      birthday int(8),
      sex varchar(1)
		)DEFAULT CHARSET=utf8;

	create table class
	(
		cla_id int(11),
		name varchar(25),
		teach_id int(11)
	)DEFAULT CHARSET=utf8;

	create table teacher
		(
			teach_id int(11),
			name varchar(25)
		)DEFAULT CHARSET=utf8;

		create table sel_class
			(
				stu_id int(11),
				cla_id int(11),
				score int(3)
			)DEFAULT CHARSET=utf8;
3、每个表均要设置主键，课程表、选课表要有相应的外键约束

	alter table student add primary key (stu_id);
	alter table teacher add primary key (teach_id);
	alter table class add primary key (cla_id);
	alter table class add foreign key(teach_id) REFERENCES teacher(teach_id);
	alter table sel_class add foreign key(stu_id) REFERENCES student(stu_id);
	alter table sel_class add foreign key(cla_id) REFERENCES class(cla_id);

4、每个表插入至少三条数据；

	insert into student values
		(100001,'张三',19971118,'m'),
		(100002,'李四',19971116,'f'),
		(100003,'王剑煌',19981117,'m');

	insert into teacher values
		(01,'王♂'),
		(02,'van'),
		(03,'魔男');

	insert into class values
		(01,'哲♂学',01),
		(02,'暗黑艺♂术',02),
		(03,'摔♂跤',03);

	insert into sel_class values
		(100001,01,60),
		(100002,02,60),
		(100003,03,100);

完成以下查询
--1、查询"01"课程比"02"课程成绩高的学生的信息及课程分数

--1.1、查询同时存在"01"课程和"02"课程的情况

--1.2、查询同时存在"01"课程和"02"课程的情况和存在"01"课程但可能不存在"02"课程的情况(不存在时显示为null)(以下存在相同内容时不再解释)

--2、查询"01"课程比"02"课程成绩低的学生的信息及课程分数

--2.1、查询同时存在"01"课程和"02"课程的情况

--2.2、查询同时存在"01"课程和"02"课程的情况和不存在"01"课程但存在"02"课程的情况
--分析：即如果没有01的分数，有02的分数就认为是01的分数比02的分数低，就要用ifnull 函数，判断是否为空，如果空则用0分替代
--所以查询时要用left做外链接,把所有的人都查进来



--3、查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩

--4、查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩


--4.1、查询在sc表存在成绩的学生信息的SQL语句。

--4.2、查询在sc表中不存在成绩的学生信息的SQL语句。



--5、查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩

--5.1、查询所有有成绩的SQL。

--5.2、查询所有(包括有成绩和无成绩)的SQL。




--6、查询"李"姓老师的数量


--7、查询学过"张三"老师授课的同学的信息

--8、查询没学过"张三"老师授课的同学的信息


--9、查询学过编号为"01"并且也学过编号为"02"的课程的同学的信息





--10、查询学过编号为"01"但是没有学过编号为"02"的课程的同学的信息

--11、查询没有学全所有课程的同学的信息
 --要把所有的学生都考虑进来，一科都没有报的也要，注意这种特殊的分组


--12、查询至少有一门课与学号为"01"的同学所学相同的同学的信息
--切记不能是’01‘学生本人

--13、查询和"01"号的同学学习的课程完全相同的其他同学的信息 -


--14、查询没学过"张三"老师讲授的任一门课程的学生姓名


--15、查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩

--16、检索"01"课程分数小于60，按分数降序排列的学生信息


--17、按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩



--18、查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率
--及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90


--19、按各科成绩进行排序，并显示排名（超）

--20.1 查询学生的总成绩



--21、查询不同老师所教不同课程平均分从高到低显示


--22、查询所有课程的成绩第2名到第3名的学生信息及该课程成绩


--23、统计各科成绩各分数段人数：课程编号,课程名称,'100-85','85-70','70-60','0-60'及所占百分比



--23.1 统计各科成绩各分数段人数：课程编号,课程名称,'100-85','85-70','70-60','0-60'


--23.2 统计各科成绩各分数段人数：课程编号,课程名称,'100-85','85-70','70-60','<60'及所占百分比

--24、查询学生平均成绩及其名次

---------------------------------------------------------------------

--25、查询各科成绩前三名的记录


--26、查询每门课程被选修的学生数

--27、查询出只有两门课程的全部学生的学号和姓名


--28、查询男生、女生人数


--29、查询名字中含有"风"字的学生信息

--30、查询同名同性学生名单，并统计同名人数

--31、查询1990年出生的学生名单(注：Student表中Sage列的类型是datetime)


--32、查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列


--33、查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩



--34、查询课程名称为"数学"，且分数低于60的学生姓名和分数


--35、查询所有学生的课程及分数情况；



--36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数；

--37、查询不及格的课程


--38、查询课程编号为01且课程成绩在80分以上的学生的学号和姓名；



--39、求每门课程的学生人数


--40、查询选修"张三"老师所授课程的学生中，成绩最高的学生信息及其成绩


--41、查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩

--42、查询每门功成绩最好的前两名

--43、统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列

--44、检索至少选修两门课程的学生学号



--45、查询选修了全部课程的学生信息

--46、查询各学生的年龄


--47、查询本周过生日的学生

--48、查询下周过生日的学生


--49、查询本月过生日的学生


--50、查询下月过生日的学生
